<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                               http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                               http://www.springframework.org/schema/aop
                               http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <bean id="statFilterImg" class="com.alibaba.druid.filter.stat.StatFilter" lazy-init="true">
        <property name="logSlowSql" value="true"/>
        <property name="mergeSql" value="true"/>
        <property name="slowSqlMillis" value="10000"/>
    </bean>


    <bean id="dataSourceImg" class="com.alibaba.druid.pool.DruidDataSource"
          destroy-method="close" init-method="init" lazy-init="true">
        <property name="driverClassName" value="${driver}"/>
        <property name="url" value="${img.url}"/>
        <property name="username" value="${w.username}"/>
        <property name="password" value="${w.password}"/>
        <property name="initialSize" value="${initialSize}"/>
        <property name="maxActive" value="${maxActive}"/>
        <property name="minIdle" value="${minIdle}"/>
        <property name="maxWait" value="${maxWait}"/>
        <property name="proxyFilters">
            <list>
                <ref bean="statFilterImg"/>
            </list>
        </property>
        <property name="filters" value="${druid.filters}"/>
        <property name="connectionProperties" value="password=${w.password}"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="timeBetweenLogStatsMillis" value="60000"/>
        <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}"/>
    </bean>


    <bean id="sessionFactoryImg" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSourceImg"/>
        <property name="mapperLocations" value="classpath:mapping/img/*.xml"/>
        <property name="configLocation" value="classpath:/config/mybatis-config.xml"/>
    </bean>

    <bean id="mapperScannerConfigurerImg" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage"
                  value="com.gt.img.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sessionFactoryImg"/>
    </bean>

    <!-- (事务管理)transaction manager, use DataSourceTransactionManager for global tx -->
    <bean id="transactionManagerImg" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSourceImg"/>
    </bean>
    <!-- (事务管理)transaction manager, use DataSourceTransactionManager for global tx -->
    <!--使用AspectJ创建代理，设置order为2，控制它的切入时间在读写分类之后 -->
    <tx:annotation-driven transaction-manager="transactionManagerImg" mode="aspectj" proxy-target-class="true" order="2"/>

</beans>